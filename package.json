{
  "name": "lifetouch-cma-cli",
  "version": "1.4.0",
  "description": "户乐CMA项目脚手架",
  "scripts": {
    "lint": "eslint .",
    "pretest": "npm run lint",
    "test": "node ./test/runTest.js"
  },
  "main": "./src/extension.js",
  "dependencies": {
    "@aws-sdk/util-utf8-node": "^0.1.0-preview.1",
    "@babel/core": "^7.10.3",
    "@babel/preset-env": "^7.10.4",
    "babel-loader": "^8.1.0",
    "chinese-conv": "^1.0.1",
    "clipboardy": "^2.3.0",
    "element-ui": "^2.4.5",
    "memory-fs": "^0.5.0",
    "svgo": "^1.3.2",
    "tinycolor2": "^1.4.1",
    "webpack": "^4.43.0"
  },
  "devDependencies": {
    "@babel/preset-env": "^7.10.4",
    "@types/glob": "^7.1.1",
    "@types/mocha": "^7.0.2",
    "@types/node": "^13.11.0",
    "@types/vscode": "^1.46.0",
    "babel-loader": "^8.1.0",
    "eslint": "^6.8.0",
    "glob": "^7.1.6",
    "memory-fs": "^0.5.0",
    "mocha": "^7.1.2",
    "typescript": "^3.8.3",
    "vscode-test": "^1.3.0",
    "vue-cli-plugin-element": "~1.0.1",
    "webpack": "^4.43.0"
  },
  "activationEvents": [
    "*"
  ],
  "categories": [
    "Other"
  ],
  "contributes": {
    "configuration": {
      "title": "cmaCli",
      "properties": {
        "cmaCli.root": {
          "type": "string",
          "default": "/src",
          "description": "Specifies the root path relative to workspaceFolders."
        },
        "cmaCli.svgFolder": {
          "type": "string",
          "default": "/src/styles/svg",
          "description": "Specifies the Svg files path relative to workspaceFolders."
        },
        "cmaCli.routeEntry": {
          "type": "string",
          "default": "/src/router/routes.js",
          "description": "Specifies the Svg files path relative to workspaceFolders."
        },
        "cmaCli.routeNames": {
          "type": "string",
          "default": "/src/assets/i18n/{lang}/route.module.json",
          "description": "Specifies the route i18n file path relative to workspaceFolders."
        },
        "cmaCli.vueTemplateFolder": {
          "type": "string",
          "default": "",
          "description": "Specifies the custom vue template folder path relative to workspaceFolder."
        },
        "cmaCli.storeFolder": {
          "type": "string",
          "default": "/src/store",
          "description": "Specifies the vuex store folder path relative to workspaceFolder."
        }
      }
    },
    "menus": {
      "explorer/context": [
        {
          "command": "cmacli.vueTemplate.generate",
          "when": "explorerResourceIsFolder",
          "group": "navigation"
        }
      ],
      "view/title": [
        {
          "command": "cmacli.svgViewer.treeView.refresh",
          "when": "view == svg",
          "group": "navigation"
        },
        {
          "command": "cmacli.svgViewer.treeView.viewAll",
          "when": "view == svg",
          "group": "navigation"
        },
        {
          "command": "cmacli.routeManager.treeView.refresh",
          "when": "view == route",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "cmacli.componentsRef.file",
          "when": "view == components",
          "group": "inline"
        },
        {
          "command": "cmacli.vueStore.find",
          "when": "view == vuex && viewItem == vuexItem",
          "group": "inline"
        },
        {
          "command": "cmacli.vueStore.copy",
          "when": "view == vuex && viewItem == vuexItem",
          "group": "inline"
        },
        {
          "command": "cmacli.vueStore.file",
          "when": "view == vuex && viewItem == vuexModule || viewItem == vuexProp",
          "group": "inline"
        },
        {
          "command": "cmacli.svgViewer.treeView.copy",
          "when": "view == svg",
          "group": "inline"
        },
        {
          "command": "cmacli.svgViewer.treeView.code",
          "when": "view == svg",
          "group": "inline"
        },
        {
          "command": "cmacli.svgViewer.treeView.view",
          "when": "view == svg",
          "group": "inline"
        },
        {
          "command": "cmacli.routeManager.treeView.permission",
          "when": "view == route && viewItem == subRoute",
          "group": "inline"
        },
        {
          "command": "cmacli.routeManager.treeView.file",
          "when": "view == route",
          "group": "inline"
        },
        {
          "command": "cmacli.routeManager.treeView.route",
          "when": "view == route",
          "group": "inline"
        },
        {
          "command": "cmacli.routeManager.treeView.vue",
          "when": "view == route",
          "group": "inline"
        },
        {
          "command": "cmacli.routeManager.treeView.create",
          "when": "view == route",
          "group": "inline"
        }
      ]
    },
    "commands": [
      {
        "command": "cmacli.js2json.transform",
        "title": "Transform to Json",
        "category": "CmaCli.Js2Json"
      },
      {
        "command": "cmacli.vueTemplate.generate",
        "title": "Generate Vue Template",
        "category": "CmaCli.vueTemplate"
      },
      {
        "command": "cmacli.svgViewer.preview",
        "title": "Preview svg files and do something",
        "category": "CmaCli.SvgViewer"
      },
      {
        "command": "cmacli.svgViewer.treeView.refresh",
        "title": "Refresh",
        "icon": "src/media/refresh.svg"
      },
      {
        "command": "cmacli.svgViewer.treeView.viewAll",
        "title": "View All",
        "icon": "src/media/view.svg"
      },
      {
        "command": "cmacli.svgViewer.treeView.copy",
        "title": "Copy Name",
        "icon": "src/media/copy.svg"
      },
      {
        "command": "cmacli.svgViewer.treeView.code",
        "title": "Copy Code",
        "icon": "src/media/code.svg"
      },
      {
        "command": "cmacli.svgViewer.treeView.view",
        "title": "View",
        "icon": "src/media/view.svg"
      },
      {
        "command": "cmacli.routeManager.treeView.refresh",
        "title": "Refresh",
        "icon": "src/media/refresh.svg"
      },
      {
        "command": "cmacli.routeManager.treeView.permission",
        "title": "Open Permission Enums",
        "icon": "src/media/permission.svg"
      },
      {
        "command": "cmacli.routeManager.treeView.file",
        "title": "Open Source File",
        "icon": "src/media/file.svg"
      },
      {
        "command": "cmacli.routeManager.treeView.route",
        "title": "Open Route Enums",
        "icon": "src/media/route.svg"
      },
      {
        "command": "cmacli.routeManager.treeView.vue",
        "title": "Open Vue Component",
        "icon": "src/media/vue.svg"
      },
      {
        "command": "cmacli.routeManager.treeView.create",
        "title": "Create New Route",
        "icon": "src/media/plus.svg"
      },
      {
        "command": "cmacli.vueStore.file",
        "title": "Open the file",
        "icon": "src/media/file.svg"
      },
      {
        "command": "cmacli.vueStore.copy",
        "title": "Copy the key",
        "icon": "src/media/copy.svg"
      },
      {
        "command": "cmacli.vueStore.find",
        "title": "Find the reference",
        "icon": "src/media/search.svg"
      },
      {
        "command": "cmacli.componentsRef.file",
        "title": "Open the component file",
        "icon": "src/media/file.svg"
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "vuex",
          "name": "vuex reference"
        },
        {
          "id": "components",
          "name": "component references"
        }
      ],
      "cma-cli": [
        {
          "id": "route",
          "name": "route"
        },
        {
          "id": "api",
          "name": "api"
        },
        {
          "id": "svg",
          "name": "svg"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "cma-cli",
          "title": "CMA-Cli",
          "icon": "src/media/hula.svg"
        }
      ]
    }
  },
  "displayName": "lifetouch-cma-cli",
  "engines": {
    "vscode": "^1.46.0"
  },
  "keywords": [
    "cmd",
    "lifetouch"
  ],
  "publisher": "yindongfang"
}
